(()=>{"use strict";var e={28:(e,n,t)=>{t.d(n,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([e.id,":root {\n  font-family: 'Courier New', Courier, monospace;\n}\n\nhtml, body {\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0 0 0 0;\n  background-color: rgb(240, 234, 214);\n}\n\n.container {\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n}\n\n.title {\n  font-size: 5rem;\n  font-weight: bolder;\n}\n\n.place-container,\n.over-container {\n  display: flex;\n  gap: 2rem;\n  align-items: center;\n}\n\n.place-ship,\n.gameover {\n  font-size: 2rem;\n  font-weight: bold;\n}\n\n.gameboards {\n  display: flex;\n  flex-direction: row;\n  gap: 2rem;\n}\n\nbutton {\n  font-size: 1.5rem;\n  padding: 0.5rem;\n  border-radius: 5px;\n  font-family: 'Courier New', Courier, monospace;\n  font-weight: 600;\n}\n\nbutton:hover {\n  cursor: pointer;\n  transform: scale(1.05);\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 50px);\n  grid-template-rows: repeat(10, 50px);\n  width: 500px;\n  height: 500px;\n}\n\n.space:hover {\n  cursor: pointer;\n}\n\n.opSpace:hover {\n  cursor: crosshair;\n}\n\n.miss {\n  position: relative;\n  border: 1px solid black;\n  background-color: rgb(133, 204, 237);\n  width: 50px;\n  height: 50px;\n}\n\n.hit {\n  position: relative;\n  border: 1px solid black;\n  background-color: rgb(245, 69, 74);\n  width: 50px;\n  height: 50px;\n}\n\n.space,\n.opSpace {\n  position: relative;\n  border: 1px solid black;\n  background-color: white;\n  width: 50px;\n  height: 50px;\n}\n\n.ship {\n  position: relative;\n  border: 1px solid black;\n  background-color: grey;\n  width: 50px;\n  height: 50px;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,8CAA8C;AAChD;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,SAAS;EACT,gBAAgB;EAChB,oCAAoC;AACtC;;AAEA;EACE,aAAa;EACb,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,eAAe;EACf,mBAAmB;AACrB;;AAEA;;EAEE,aAAa;EACb,SAAS;EACT,mBAAmB;AACrB;;AAEA;;EAEE,eAAe;EACf,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,SAAS;AACX;;AAEA;EACE,iBAAiB;EACjB,eAAe;EACf,kBAAkB;EAClB,8CAA8C;EAC9C,gBAAgB;AAClB;;AAEA;EACE,eAAe;EACf,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,uCAAuC;EACvC,oCAAoC;EACpC,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,kBAAkB;EAClB,uBAAuB;EACvB,oCAAoC;EACpC,WAAW;EACX,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,uBAAuB;EACvB,kCAAkC;EAClC,WAAW;EACX,YAAY;AACd;;AAEA;;EAEE,kBAAkB;EAClB,uBAAuB;EACvB,uBAAuB;EACvB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,uBAAuB;EACvB,sBAAsB;EACtB,WAAW;EACX,YAAY;AACd",sourcesContent:[":root {\n  font-family: 'Courier New', Courier, monospace;\n}\n\nhtml, body {\n  width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 0 0 0 0;\n  background-color: rgb(240, 234, 214);\n}\n\n.container {\n  padding: 1rem;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n}\n\n.title {\n  font-size: 5rem;\n  font-weight: bolder;\n}\n\n.place-container,\n.over-container {\n  display: flex;\n  gap: 2rem;\n  align-items: center;\n}\n\n.place-ship,\n.gameover {\n  font-size: 2rem;\n  font-weight: bold;\n}\n\n.gameboards {\n  display: flex;\n  flex-direction: row;\n  gap: 2rem;\n}\n\nbutton {\n  font-size: 1.5rem;\n  padding: 0.5rem;\n  border-radius: 5px;\n  font-family: 'Courier New', Courier, monospace;\n  font-weight: 600;\n}\n\nbutton:hover {\n  cursor: pointer;\n  transform: scale(1.05);\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 50px);\n  grid-template-rows: repeat(10, 50px);\n  width: 500px;\n  height: 500px;\n}\n\n.space:hover {\n  cursor: pointer;\n}\n\n.opSpace:hover {\n  cursor: crosshair;\n}\n\n.miss {\n  position: relative;\n  border: 1px solid black;\n  background-color: rgb(133, 204, 237);\n  width: 50px;\n  height: 50px;\n}\n\n.hit {\n  position: relative;\n  border: 1px solid black;\n  background-color: rgb(245, 69, 74);\n  width: 50px;\n  height: 50px;\n}\n\n.space,\n.opSpace {\n  position: relative;\n  border: 1px solid black;\n  background-color: white;\n  width: 50px;\n  height: 50px;\n}\n\n.ship {\n  position: relative;\n  border: 1px solid black;\n  background-color: grey;\n  width: 50px;\n  height: 50px;\n}"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",o=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),o&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),o&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,o,r,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var l=0;l<e.length;l++){var p=[].concat(e[l]);o&&i[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),r&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=r):p[4]="".concat(r)),n.push(p))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,o=0;o<n.length;o++)if(n[o].identifier===e){t=o;break}return t}function o(e,o){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],l=o.base?s[0]+o.base:s[0],p=a[l]||0,A="".concat(l," ").concat(p);a[l]=p+1;var u=t(A),d={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(d);else{var f=r(d,o);o.byIndex=c,n.splice(c,0,{identifier:A,updater:f,references:1})}i.push(A)}return i}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var a=o(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var s=o(e,r),l=0;l<a.length;l++){var p=t(a[l]);0===n[p].references&&(n[p].updater(),n.splice(p,1))}a=s}}},569:e=>{var n={};e.exports=function(e,t){var o=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(o,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}}},n={};function t(o){var r=n[o];if(void 0!==r)return r.exports;var a=n[o]={id:o,exports:{}};return e[o](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var o in n)t.o(n,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:n[o]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(379),n=t.n(e),o=t(795),r=t.n(o),a=t(569),i=t.n(a),c=t(565),s=t.n(c),l=t(216),p=t.n(l),A=t(589),u=t.n(A),d=t(28),f={};function m(){let e=new Array(10);for(let n=0;n<10;n++)e[n]=new Array(10).fill("empty");const n=(n,t,o,r)=>{e[o][t]=n;for(let a=1;a<n.length;a++)"col"===r?o+=1:"row"===r&&(t+=1),e[o][t]=n},t=(e,n,t,i)=>!o(e,n,t,i)&&!r(e,n,t,i)&&!a(e,n,t,i),o=(e,n,t,o)=>"row"===o&&n+e.length>10||"col"===o&&t+e.length>10,r=(n,t,o,r)=>{for(let a=1;a<=n.length;a++){if("empty"!==e[o][t])return!0;"col"===r?o+=1:"row"===r&&(t+=1)}return!1},a=(n,t,o,r)=>{for(let a=1;a<=n.length;a++){if(9!==t&&"empty"!==e[o][t+1])return!0;if(0!==t&&"empty"!==e[o][t-1])return!0;if(9!==o&&"empty"!==e[o+1][t])return!0;if(0!==o&&"empty"!==e[o-1][t])return!0;"col"===r?o+=1:"row"===r&&(t+=1)}return!1};return{getBoard:()=>e,placeShip:n,recieveAttack:(n,t)=>{const o=e[t][n];if("empty"===o)e[t][n]="missed";else if("object"==typeof o)return o.hit(),o},isGameOver:()=>{for(const n of e)for(const e of n)if("object"==typeof e&&!1===e.isSunk())return!1;return!0},isPlacePossible:t,placeShipRandom:e=>{let o;o=1===Math.floor(2*Math.random())?"row":"col";let r=!0;for(;r;){const a=Math.floor(99*Math.random()),i=a%10,c=Math.floor(a/10);t(e,i,c,o)&&(n(e,i,c,o),r=!1)}}}}function h(){let e=[],n=[0,0];for(let t=0;t<100;t++)e.push([n[0],n[1]]),n[0]<9?n[0]+=1:(n[1]+=1,n[0]=0);let t=[],o=[];const r=(n,t)=>{for(const o of e)if(o[0]===n&&o[1]===t)return!1;return!0},a=(n,t)=>{let o=0;for(let r of e){if(n===r[0]&&t===r[1])break;o++}e.splice(o,1)},i=(e,n)=>{!1===r(e-1,n)&&t.push([e-1,n]),!1===r(e,n-1)&&t.push([e,n-1]),!1===r(e+1,n)&&t.push([e+1,n]),!1===r(e,n+1)&&t.push([e,n+1])},c=()=>{t=[];const e=o[0].map((function(e,n){return e-o[1][n]}));for(const n of o){const o=n[0],a=n[1];0!==e[0]?(!1===r(o+1,a)&&t.push([o+1,a]),!1===r(o-1,a)&&t.push([o-1,a])):(!1===r(o,a+1)&&t.push([o,a+1]),!1===r(o,a-1)&&t.push([o,a-1]))}};return{attackBoard:(e,n,t)=>{!0!==r(n,t)&&(a(n,t),e.recieveAttack(n,t))},computerAttack:n=>t.length>0?(e=>{const n=Math.floor(Math.random()*t.length),r=t[n];return a(r[0],r[1]),((e,n)=>{let o=0;for(let r of t){if(e===r[0]&&n===r[1])break;o++}t.splice(o,1)})(r[0],r[1]),"object"==typeof e.recieveAttack(r[0],r[1])&&(o.push([r[0],r[1]]),c()),[r[0],r[1]]})(n):(o=[],(n=>{const t=Math.floor(Math.random()*e.length),r=e[t];return a(r[0],r[1]),"object"==typeof n.recieveAttack(r[0],r[1])&&(o.push([r[0],r[1]]),i(r[0],r[1])),[r[0],r[1]]})(n))}}function C(e,n){let t=0;return{length:e,name:n,getHitCount:()=>t,hit:()=>{t+=1},isSunk:()=>e-t<=0}}f.styleTagTransform=u(),f.setAttributes=s(),f.insert=i().bind(null,"head"),f.domAPI=r(),f.insertStyleElement=p(),n()(d.Z,f),d.Z&&d.Z.locals&&d.Z.locals;const v=e=>{const n=document.querySelector("#player");for(const t of e)for(const e of t){const t=document.createElement("div");t.classList.add("space"),"object"==typeof e&&t.classList.add("ship"),n.appendChild(t)}},g=e=>{e.target.classList.remove("opSpace")},E=(e,n,t)=>{let o=10*n;o+=e;let r=0;for(let e of t)r===o&&(e.classList.contains("ship")?(e.classList.add("hit"),e.classList.remove("ship")):e.classList.add("miss"),e.classList.remove("space")),r++},y=(e,n)=>{const t=document.querySelector(".over-container"),o=document.querySelector(".gameover");if(n.isGameOver()?o.textContent="You Have Won!":e.isGameOver()&&(o.textContent="You Have Lost!"),n.isGameOver()||e.isGameOver()){const e=document.createElement("button");t.appendChild(e),e.textContent="Play Again",e.addEventListener("click",S);let n=document.querySelectorAll(".opSpace");for(let e of n){let n=e.cloneNode(!0);e.parentNode.replaceChild(n,e)}}},b=e=>{const n=document.querySelector(".rotate-button");let t,o,r=document.querySelectorAll(".space");"row"===n.value&&(t=50*e,o=50),"col"===n.value&&(t=50,o=50*e);for(let e of r){const n=e.style.backgroundColor;e.addEventListener("mouseenter",(function(n){e.style.backgroundColor="pink",e.style.width=`${t}px`,e.style.height=`${o}px`,e.style.zIndex="1"}),!1),e.addEventListener("mouseleave",(function(t){e.style.backgroundColor=n,e.style.width="50px",e.style.height="50px",e.style.zIndex="0"}),!1)}},B=(e,n,t,o,r=0)=>{let a=[C(5,"carrier"),C(4,"battleship"),C(3,"destroyer"),C(3,"submarine"),C(2,"patrol boat")];var i;document.querySelector("#player").innerHTML="",v(t.getBoard()),i=a[r].name,document.querySelector(".place-ship").textContent="Place your "+i,b(a[r].length);let c=document.querySelector(".place-container");c.style.display="flex";const s=document.querySelector(".rotate-button");s.addEventListener("click",(function(){b(a[r].length)}));const l=document.querySelectorAll(".space");let p=0;for(let i of l){const l=Math.floor(p/10),A=p%10;i.addEventListener("click",(()=>{t.isPlacePossible(a[r],A,l,s.value)&&(t.placeShip(a[r],A,l,s.value),++r<5?B(e,n,t,o,r):(x(e,n,t,o),c.style.display="none"))})),p++}},x=(e,n,t,o)=>{let r=C(5,"carrier"),a=C(4,"battleship"),i=C(3,"destroyer"),c=C(3,"submarine"),s=C(2,"patrol boat");o.placeShipRandom(r),o.placeShipRandom(a),o.placeShipRandom(i),o.placeShipRandom(c),o.placeShipRandom(s),document.querySelector("#player").innerHTML="",v(t.getBoard()),(e=>{const n=document.querySelector(".gameboards"),t=document.createElement("div");t.setAttribute("id","computer"),t.classList.add("board"),n.appendChild(t);for(const n of e)for(const e of n){const n=document.createElement("div");n.classList.add("opSpace"),t.appendChild(n),"empty"===e?n.classList.add("miss"):n.classList.add("hit")}})(o.getBoard());let l=document.querySelectorAll(".space"),p=document.querySelectorAll(".opSpace"),A=0;for(let r of p){const a=Math.floor(A/10),i=A%10;r.addEventListener("click",(function r(c){e.attackBoard(o,i,a),g(c);const s=n.computerAttack(t);E(s[0],s[1],l),y(t,o),this.removeEventListener("click",r)})),A++}},S=()=>{document.querySelector(".place-container").style.display="flex",document.querySelector("#computer").remove(),document.querySelector("#player").innerHTML="",document.querySelector(".over-container").innerHTML="";let e=h(),n=h(),t=m(),o=m();B(e,n,t,o)};document.querySelector(".rotate-button").addEventListener("click",(()=>{const e=document.querySelector(".rotate-button");"row"===e.value?e.value="col":e.value="row"}));let k=h(),w=h(),L=m(),M=m();B(k,w,L,M)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,