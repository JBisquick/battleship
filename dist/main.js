(()=>{"use strict";var e={28:(e,t,n)=>{n.d(t,{Z:()=>s});var r=n(537),o=n.n(r),a=n(645),c=n.n(a)()(o());c.push([e.id,".gameboards {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 50px);\n}\n\n.space,\n.opSpace:hover {\n  cursor: pointer;\n}\n\n.miss {\n  border: 1px solid black;\n  background-color: blue;\n  width: 50px;\n  height: 50px;\n}\n\n.hit {\n  border: 1px solid black;\n  background-color: red;\n  width: 50px;\n  height: 50px;\n}\n\n.space,\n.opSpace {\n  border: 1px solid black;\n  background-color: white;\n  width: 50px;\n  height: 50px;\n}\n\n.ship {\n  border: 1px solid black;\n  background-color: grey;\n  width: 50px;\n  height: 50px;\n}","",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,mBAAmB;EACnB,6BAA6B;AAC/B;;AAEA;EACE,aAAa;EACb,uCAAuC;AACzC;;AAEA;;EAEE,eAAe;AACjB;;AAEA;EACE,uBAAuB;EACvB,sBAAsB;EACtB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,uBAAuB;EACvB,qBAAqB;EACrB,WAAW;EACX,YAAY;AACd;;AAEA;;EAEE,uBAAuB;EACvB,uBAAuB;EACvB,WAAW;EACX,YAAY;AACd;;AAEA;EACE,uBAAuB;EACvB,sBAAsB;EACtB,WAAW;EACX,YAAY;AACd",sourcesContent:[".gameboards {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 50px);\n}\n\n.space,\n.opSpace:hover {\n  cursor: pointer;\n}\n\n.miss {\n  border: 1px solid black;\n  background-color: blue;\n  width: 50px;\n  height: 50px;\n}\n\n.hit {\n  border: 1px solid black;\n  background-color: red;\n  width: 50px;\n  height: 50px;\n}\n\n.space,\n.opSpace {\n  border: 1px solid black;\n  background-color: white;\n  width: 50px;\n  height: 50px;\n}\n\n.ship {\n  border: 1px solid black;\n  background-color: grey;\n  width: 50px;\n  height: 50px;\n}"],sourceRoot:""}]);const s=c},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var c={};if(r)for(var s=0;s<this.length;s++){var i=this[s][0];null!=i&&(c[i]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);r&&c[u[0]]||(void 0!==a&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=a),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),o&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=o):u[4]="".concat(o)),t.push(u))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var a={},c=[],s=0;s<e.length;s++){var i=e[s],l=r.base?i[0]+r.base:i[0],u=a[l]||0,d="".concat(l," ").concat(u);a[l]=u+1;var p=n(d),f={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==p)t[p].references++,t[p].updater(f);else{var A=o(f,r);r.byIndex=s,t.splice(s,0,{identifier:d,updater:A,references:1})}c.push(d)}return c}function o(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var c=0;c<a.length;c++){var s=n(a[c]);t[s].references--}for(var i=r(e,o),l=0;l<a.length;l++){var u=n(a[l]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}a=i}}},569:e=>{var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var o=void 0!==n.layer;o&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,o&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var a=n.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),r=n(795),o=n.n(r),a=n(569),c=n.n(a),s=n(565),i=n.n(s),l=n(216),u=n.n(l),d=n(589),p=n.n(d),f=n(28),A={};function m(){let e=new Array(10);for(let t=0;t<10;t++)e[t]=new Array(10).fill("empty");return{getBoard:()=>e,placeShip:(t,n,r,o)=>{e[r][n]=t;for(let a=1;a<t.length;a++)"col"===o?r+=1:"row"===o&&(n+=1),e[r][n]=t},recieveAttack:(t,n)=>{const r=e[n][t];"empty"===r?e[n][t]="missed":"object"==typeof r&&r.hit()},isGameOver:()=>{for(const t of e)for(const e of t)if("object"==typeof e&&!1===e.isSunk())return!1;return!0},isPlacePossible:(t,n,r,o)=>!((e,t,n,r)=>"row"===r&&t+e.length>10||"col"===r&&n+e.length>10)(t,n,r,o)&&!((t,n,r,o)=>{for(let a=1;a<=t.length;a++){if("empty"!==e[r][n])return!0;"col"===o?r+=1:"row"===o&&(n+=1)}return!1})(t,n,r,o)&&!((t,n,r,o)=>{for(let a=1;a<=t.length;a++){if(9!==n&&"empty"!==e[r][n+1])return!0;if(0!==n&&"empty"!==e[r][n-1])return!0;if(9!==r&&"empty"!==e[r+1][n])return!0;if(0!==r&&"empty"!==e[r-1][n])return!0;"col"===o?r+=1:"row"===o&&(n+=1)}return!1})(t,n,r,o)}}function h(){let e=[],t=[0,0];for(let n=0;n<100;n++)e.push([t[0],t[1]]),t[0]<9?t[0]+=1:(t[1]+=1,t[0]=0);const n=(t,n)=>{let r=0;for(let o of e){if(t===o[0]&&n===o[1])break;r++}e.splice(r,1)};return{attackBoard:(t,r,o)=>{!0!==((t,n)=>{for(const r of e)if(r[0]===t&&r[1]===n)return!1;return!0})(r,o)&&(n(r,o),t.recieveAttack(r,o))},computerAttack:t=>{const r=Math.floor(Math.random()*e.length),o=e[r];return n(o[0],o[1]),t.recieveAttack(o[0],o[1]),[o[0],o[1]]}}}function v(e,t){let n=0;return{length:e,name:t,getHitCount:()=>n,hit:()=>{n+=1},isSunk:()=>e-n<=0}}A.styleTagTransform=p(),A.setAttributes=i(),A.insert=c().bind(null,"head"),A.domAPI=o(),A.insertStyleElement=u(),t()(f.Z,A),f.Z&&f.Z.locals&&f.Z.locals;const y=e=>{const t=document.querySelector("#player");for(const n of e)for(const e of n){const n=document.createElement("div");n.classList.add("space"),"object"==typeof e&&n.classList.add("ship"),t.appendChild(n)}},b=e=>{e.target.classList.remove("opSpace")},g=(e,t,n)=>{let r=10*t;r+=e;let o=0;for(let e of n)o===r&&(e.classList.contains("ship")?(e.classList.add("hit"),e.classList.remove("ship")):e.classList.add("miss"),e.classList.remove("space")),o++},E=(e,t)=>{const n=document.querySelector(".gameover");t.isGameOver()?n.textContent="You Have Won!":e.isGameOver()&&(n.textContent="You Have Lost!")};let x=[v(5,"carrier"),v(4,"battleship"),v(3,"destroyer"),v(3,"submarine"),v(2,"patrol boat")];const C=(e,t,n,r,o=0)=>{var a;document.querySelector("#player").innerHTML="",y(n.getBoard()),a=x[o].name,document.querySelector(".place-ship").textContent="Place your "+a;let c=document.querySelector(".place-container");c.style.display="block";const s=document.querySelector(".rotate-button"),i=document.querySelectorAll(".space");let l=0;for(let a of i){const i=Math.floor(l/10),u=l%10;a.addEventListener("click",(()=>{n.isPlacePossible(x[o],u,i,s.value)&&(n.placeShip(x[o],u,i,s.value),++o<5?C(e,t,n,r,o):(B(e,t,n,r),c.style.display="none"))})),l++}},B=(e,t,n,r)=>{document.querySelector("#player").innerHTML="",y(n.getBoard()),(e=>{const t=document.querySelector(".gameboards"),n=document.createElement("div");n.setAttribute("id","computer"),n.classList.add("board"),t.appendChild(n);for(const t of e)for(const e of t){const t=document.createElement("div");t.classList.add("opSpace"),n.appendChild(t),"empty"===e?t.classList.add("miss"):t.classList.add("hit")}})(r.getBoard());let o=document.querySelectorAll(".space"),a=document.querySelectorAll(".opSpace"),c=0;for(let s of a){const a=Math.floor(c/10),i=c%10;s.addEventListener("click",(function c(s){e.attackBoard(r,i,a),b(s);const l=t.computerAttack(n);g(l[0],l[1],o),E(n,r),this.removeEventListener("click",c)})),c++}};let k=document.querySelector(".rotate-button"),S=h(),w=h(),L=m(),q=m();k.addEventListener("click",(()=>{"row"===k.value?k.value="col":k.value="row"})),C(S,w,L,q)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,